--[[
  ____    _    ____  _  __   _   _ _   _ ____  
 |  _ \  / \  |  _ \| |/ /  | | | | | | | __ ) 
 | | | |/ _ \ | |_) | ' /   | |_| | | | |  _ \ 
 | |_| / ___ \|  _ <| . \   |  _  | |_| | |_) |
 |____/_/   \_\_| \_\_|\_\  |_| |_|\___/|____/ 
               ~ CBRO By: The Rape Man and Gay Ass Femboy Lover ~               
]]
local Config = {
    Visuals = {
        BoxEsp = false,
        TracerEsp = false,
        TracersOrigin = "Top", -- "Top", "Middle", "Bottom", or "Mouse"
        NameEsp = false,
        DistanceEsp = false,
        SkeletonEsp = false,
        EnemyColor = Color3.fromRGB(190, 190, 0),
        TeamColor = Color3.fromRGB(0, 190, 0),
        Flash = false,
        BulletTracers = false,
        ImpactPoints = false,
        BulletTracersColor = Color3.fromRGB(100, 100, 255),
        ImpactPointsColor = Color3.fromRGB(255, 50, 50)
    },
    Aimbot = {
        Aimbot = false,
        TriggerBot = false,
        Smoothness = 0.25,
        AimBone = "Head",
        MouseTwoDown = false, -- Dont Touch
        Silent = false,
        VisCheck = false,
        DrawFOV = false,
        FOV = 200,
        SnapLines = false,
        Backtrack = false,
        Delay = 0.66,
        Color = Color3.fromRGB(60, 60, 190)
    },
    GunMods = {
        Recoil = false,
        Spread = false,
        FireRate = false,
        FireRateAmmount = 0.1,
        InfAmmo = false,
        InfPenetration = false,
        InstaKill = false
    }
}

local Funcs = {}

function Funcs:IsAlive(player)
    if
        player and player.Character and player.Character:FindFirstChild("Head") and
            workspace:FindFirstChild(player.Character.Name)
     then
        return true
    end
end

function Funcs:Round(number)
    return math.floor(tonumber(number) + 0.5)
end

function Funcs:DrawSquare()
    local Box = Drawing.new("Square")
    Box.Color = Color3.fromRGB(190, 190, 0)
    Box.Thickness = 0.5
    Box.Filled = false
    Box.Transparency = 1
    return Box
end

function Funcs:DrawLine()
    local line = Drawing.new("Line")
    line.Color = Color3.new(190, 190, 0)
    line.Thickness = 0.5
    return line
end

function Funcs:DrawText()
    local text = Drawing.new("Text")
    text.Color = Color3.fromRGB(190, 190, 0)
    text.Size = 20
    text.Outline = true
    text.Center = true
    return text
end

local Services =
    setmetatable(
    {
        LocalPlayer = game.GetService(game, "Players").LocalPlayer,
        Camera = workspace.CurrentCamera,
        Mouse = game.GetService(game, "Players").LocalPlayer:GetMouse()
    },
    {
        __index = function(self, idx)
            return rawget(self, idx) or game:GetService(idx)
        end
    }
)
local things = Instance.new("Folder", Services.Workspace)
local Mouse = Services.LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")
local target = false
local Client = getsenv(Services.Players.LocalPlayer.PlayerGui.Client)
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/RandomAdamYT/DarkHub/master/NewUI"))()
local main = lib:Window()
Aimbot = main:Tab("Aimbot")
Esp = main:Tab("Visuals")
GunMods = main:Tab("Gun Mods")
things.Name = "teax was here"

Aimbot:Toggle(
    "Aimbot",
    function(state)
        Config.Aimbot.Aimbot = state
    end
)

Aimbot:Toggle(
    "Silent Aim",
    function(state)
        Config.Aimbot.Silent = state
    end
)

Aimbot:Toggle(
    "Wallbang",
    function(state)
        Config.Aimbot.Wallbang = state
    end
)

Aimbot:Dropdown(
    "Aim Bone",
    {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"},
    function(selected)
        if selected == "Head" then
            Config.Aimbot.AimBone = "Head"
        elseif selected == "Torso" then
            Config.Aimbot.AimBone = "UpperTorso"
        elseif selected == "Left Arm" then
            Config.Aimbot.AimBone = "LeftLowerArm"
        elseif selected == "Right Arm" then
            Config.Aimbot.AimBone = "RightLowerArm"
        elseif selected == "Left Leg" then
            Config.Aimbot.AimBone = "LeftLowerLeg"
        elseif selected == "Right Leg" then
            Config.Aimbot.AimBone = "RightLowerLeg"
        end
    end
)

Aimbot:Toggle(
    "Draw FOV",
    function(state)
        Config.Aimbot.DrawFOV = state
    end
)

Aimbot:Toggle(
    "Draw SnapLines",
    function(state)
        Config.Aimbot.SnapLines = state
    end
)

Aimbot:Slider(
    "Smoothness",
    0,
    10,
    function(number)
        Config.Aimbot.Smoothness = number / 10
    end
)

Aimbot:Slider(
    "FOV",
    0,
    1000,
    function(number)
        Config.Aimbot.FOV = number
    end
)

Esp:Toggle(
    "Boxes",
    function(state)
        Config.Visuals.BoxEsp = state
    end
)

Esp:Toggle(
    "Tracers",
    function(state)
        Config.Visuals.TracerEsp = state
    end
)

Esp:Dropdown(
    "Tracers Origin",
    {"Top", "Middle", "Bottom", "Mouse"},
    function(selected)
        Config.Visuals.TracersOrigin = selected
    end
)

Esp:Toggle(
    "Names",
    function(state)
        Config.Visuals.NameEsp = state
    end
)

Esp:Toggle(
    "Distance",
    function(state)
        Config.Visuals.DistanceEsp = state
    end
)

Esp:Toggle(
    "Skeleton",
    function(state)
        Config.Visuals.SkeletonEsp = state
    end
)

Esp:Colorpicker(
    "Team Esp Color",
    Color3.fromRGB(0, 190, 0),
    function(color)
        Config.Visuals.TeamColor = color
    end
)

Esp:Colorpicker(
    "Enemy Esp Color",
    Color3.fromRGB(190, 190, 0),
    function(color)
        Config.Visuals.EnemyColor = color
    end
)

Esp:Toggle(
    "No Flash Bang",
    function(state)
        Config.Visuals.Flash = state
    end
)

Esp:Toggle(
    "Bullet Tracers",
    function(state)
        Config.Visuals.BulletTracers = state
    end
)

Esp:Colorpicker(
    "Bullet Tracers Color",
    Color3.fromRGB(100, 100, 255),
    function(color)
        Config.Visuals.BulletTracersColor = color
    end
)

Esp:Toggle(
    "Impact Points",
    function(state)
        Config.Visuals.ImpactPoints = state
    end
)

Esp:Colorpicker(
    "Impact Points Color",
    Color3.fromRGB(255, 50, 50),
    function(color)
        Config.Visuals.ImpactPointsColor = color
    end
)

GunMods:Toggle(
    "No Recoil",
    function(state)
        Config.GunMods.Recoil = state
    end
)

GunMods:Toggle(
    "No Spread",
    function(state)
        Config.GunMods.Spread = state
    end
)

GunMods:Toggle(
    "Infinite Ammo",
    function(state)
        Config.GunMods.InfAmmo = state
    end
)

GunMods:Toggle(
    "Insta Kill",
    function(state)
        Config.GunMods.InstaKill = state
    end
)

function Funcs:GetTarget()
    local nearestmagnitude = math.huge
    local nearestenemy = nil
    local vector = nil
    for i, v in pairs(game.Players.GetChildren(game.Players)) do
        if v.Team ~= game.Players.LocalPlayer.Team then
            if
                v.Character and v.Character.FindFirstChild(v.Character, "HumanoidRootPart") and
                    v.Character.FindFirstChild(v.Character, "Humanoid") and
                    v.Character.Humanoid.Health > 0
             then
                local vector, onScreen =
                    game.Workspace.Camera.WorldToScreenPoint(
                    game.Workspace.Camera,
                    v.Character["HumanoidRootPart"].Position
                )
                if onScreen then
                    local magnitude = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                    if magnitude < nearestmagnitude and magnitude <= Config.Aimbot["FOV"] then
                        nearestenemy = v
                        nearestmagnitude = magnitude
                    end
                end
            end
        end
    end
    return nearestenemy
end

function Funcs:Trace(firstpos, secondpos)
    local colorSequence = ColorSequence.new(Config.Visuals.BulletTracersColor, Config.Visuals.BulletTracersColor)
    local start = Instance.new("Part", things)
    local endd = Instance.new("Part", things)
    local Attachment = Instance.new("Attachment", start)
    local Attachment2 = Instance.new("Attachment", endd)
    local laser = Instance.new("Beam", start)
    start.Size = Vector3.new(0, 0, 0)
    start.Transparency = 1
    start.CanCollide = false
    start.CFrame = CFrame.new(firstpos)
    start.Anchored = true
    endd.Size = Vector3.new(0, 0, 0)
    endd.Transparency = 1
    endd.CanCollide = false
    endd.CFrame = CFrame.new(secondpos)
    endd.Anchored = true
    laser.FaceCamera = false
    laser.Color = colorSequence
    laser.LightEmission = 0
    laser.LightInfluence = 0
    laser.Width0 = 0.1
    laser.Width1 = 0.1
    laser.Attachment0 = Attachment
    laser.Attachment1 = Attachment2
    delay(
        1.6,
        function()
            for i = 0.5, 1.3, 0.2 do
                wait()
                laser.Transparency = NumberSequence.new(i)
            end
            start:Destroy()
            endd:Destroy()
        end
    )
end

function Funcs:Highlight(pos)
    local highlight = Instance.new("Part", things)
    highlight.Size = Vector3.new(0.4, 0.4, 0.4)
    highlight.Transparency = 0.5
    highlight.CanCollide = false
    highlight.Position = pos
    highlight.Anchored = true
    highlight.Color = Config.Visuals.ImpactPointsColor
    delay(
        2,
        function()
            for i = 1, 10 do
                wait()
                highlight.Transparency = highlight.Transparency + 0.05
            end
            highlight:Destroy()
        end
    )
end

local game_mt = getrawmetatable(game)
local namecall = game_mt.__namecall
setreadonly(game_mt, false)
game_mt.__namecall =
    newcclosure(
    function(...)
        local Method = getnamecallmethod()
        local Args = {...}
        if Method == "FireServer" and Args[1] == "HitPart" then
            if Config.Visuals.BulletTracers and Services.LocalPlayer.Character and Services.LocalPlayer.Character.Gun then
                Funcs:Trace(Services.LocalPlayer.Character.Gun.Position, Args[3])
            end
            if Config.Visuals.ImpactPoints then
                Funcs:Highlight(Args[3])
            end
        end
        if
            Method == "FindPartOnRayWithIgnoreList" and Services.LocalPlayer.Character and
                Services.LocalPlayer.Character.FindFirstChild(Services.LocalPlayer.Character, "Head")
         then
            if Config.Aimbot.Wallbang then
                table.insert(Args[3], game.GetService(game, "Workspace").Map)
            end
            if Config.Aimbot.Silent and Args[3] ~= {Services.LocalPlayer.Character} then
                local Target = Funcs.GetTarget(Funcs)

                if Target ~= nil and Target.Character then
                    Args[2] =
                        Ray.new(
                        Services.LocalPlayer.Character.Head.Position,
                        (Target.Character[Config.Aimbot.AimBone].Position - Services.LocalPlayer.Character.Head.Position).unit *
                            500
                    )
                end
                return namecall(unpack(Args))
            end
        end

        return namecall(...)
    end
)
setreadonly(game_mt, true)

spawn(
    function()
        while wait() do
            pcall(
                function()
                    TargetPlayer = Funcs:GetTarget()
                    if TargetPlayer and Config.Aimbot.MouseTwoDown and Config.Aimbot.Aimbot then
                        local niggasbone =
                            Services.Camera.WorldToScreenPoint(
                            Services.Camera,
                            TargetPlayer.Character[Config.Aimbot.AimBone].Position
                        )
                        local moveto =
                            Vector2.new(
                            (niggasbone.X - Mouse.X) * Config.Aimbot.Smoothness,
                            (niggasbone.Y - Mouse.Y) * Config.Aimbot.Smoothness
                        )
                        mousemoverel(moveto.X, moveto.Y)
                    end
                    if Config.Aimbot.TriggerBot == true then
                        local Target = Mouse.Target
                        if Target then
                            local TargetPlayer = LocalPlayer.Parent:FindFirstChild(Target.Parent.Name)
                            if
                                Target.Parent and TargetPlayer ~= nil and TargetPlayer.Team ~= LocalPlayer.Team and
                                    LocalPlayer.Character.Head or
                                    Target.Name == "backtrackpart"
                             then
                                mouse1press()
                                wait()
                                mouse1release()
                            end
                        end
                    end
                    Services.RunService.Heartbeat:wait()
                end
            )
        end
    end
)

Mouse.Button2Down:Connect(
    function()
        Config.Aimbot.MouseTwoDown = true
    end
)

Mouse.Button2Up:Connect(
    function()
        Config.Aimbot.MouseTwoDown = false
    end
)

function GetOffset(part, pos)
    local FarPosition =
        Services.Camera:WorldToViewportPoint(
        Vector3.new(part.Position.X, part.Position.Y + (part.Size.Y / 2), part.Position.Z)
    )
    return FarPosition.Y - pos.Y
end

function GetCorners(player)
    local TopY = 69696969
    local BottomY = -69696969
    local RightX = -69696969
    local LeftX = 69696969
    local Offsets
    local Positions = {}
    for i, v in next, player.Character:GetChildren() do
        if v.ClassName == "MeshPart" or v.Name == "Head" then
            local Position, OnScreen = Services.Camera:WorldToViewportPoint(v.Position)
            Positions[v.Name] = Position
            Offsets = GetOffset(v, Position)
            if OnScreen then
                if Position.Y < TopY then
                    TopY = Position.Y
                end
                if Position.Y > BottomY then
                    BottomY = Position.Y
                end
                if Position.X < LeftX then
                    LeftX = Position.X
                end
                if Position.X > RightX then
                    RightX = Position.X
                end
            end
        end
    end
    return {
        TopLeft = Vector2.new(LeftX + Offsets, TopY + Offsets),
        TopRight = Vector2.new(RightX - Offsets, TopY + Offsets),
        BottomLeft = Vector2.new(LeftX + Offsets, BottomY - Offsets),
        BottomRight = Vector2.new(RightX - Offsets, BottomY - Offsets),
        Positions = Positions
    }
end

function Funcs:AddEsp(player)
    local Box = Funcs:DrawSquare()
    local Tracer = Funcs:DrawLine()
    local Name = Funcs:DrawText()
    local Distance = Funcs:DrawText()
    local SnapLines = Funcs:DrawLine()
    local HeadLowerTorso = Funcs:DrawLine()
    local NeckLeftUpper = Funcs:DrawLine()
    local LeftUpperLeftLower = Funcs:DrawLine()
    local NeckRightUpper = Funcs:DrawLine()
    local RightUpperLeftLower = Funcs:DrawLine()
    local LowerTorsoLeftUpper = Funcs:DrawLine()
    local LeftLowerLeftUpper = Funcs:DrawLine()
    local LowerTorsoRightUpper = Funcs:DrawLine()
    local RightLowerRightUpper = Funcs:DrawLine()
    Services.RunService.Stepped:Connect(
        function()
            IsAlive = Funcs:IsAlive(player)
            if IsAlive and player.Team ~= Services.LocalPlayer.Team then
                Box.Color = Config.Visuals.EnemyColor
                Tracer.Color = Config.Visuals.EnemyColor
                Name.Color = Config.Visuals.EnemyColor
                Distance.Color = Config.Visuals.EnemyColor
                HeadLowerTorso.Color = Config.Visuals.EnemyColor
                NeckLeftUpper.Color = Config.Visuals.EnemyColor
                LeftUpperLeftLower.Color = Config.Visuals.EnemyColor
                NeckRightUpper.Color = Config.Visuals.EnemyColor
                RightUpperLeftLower.Color = Config.Visuals.EnemyColor
                LowerTorsoLeftUpper.Color = Config.Visuals.EnemyColor
                LeftLowerLeftUpper.Color = Config.Visuals.EnemyColor
                LowerTorsoRightUpper.Color = Config.Visuals.EnemyColor
                RightLowerRightUpper.Color = Config.Visuals.EnemyColor
            elseif IsAlive then
                Box.Color = Config.Visuals.TeamColor
                Tracer.Color = Config.Visuals.TeamColor
                Name.Color = Config.Visuals.TeamColor
                Distance.Color = Config.Visuals.TeamColor
                HeadLowerTorso.Color = Config.Visuals.TeamColor
                NeckLeftUpper.Color = Config.Visuals.TeamColor
                LeftUpperLeftLower.Color = Config.Visuals.TeamColor
                NeckRightUpper.Color = Config.Visuals.TeamColor
                RightUpperLeftLower.Color = Config.Visuals.TeamColor
                LowerTorsoLeftUpper.Color = Config.Visuals.TeamColor
                LeftLowerLeftUpper.Color = Config.Visuals.TeamColor
                LowerTorsoRightUpper.Color = Config.Visuals.TeamColor
                RightLowerRightUpper.Color = Config.Visuals.TeamColor
            end
            if IsAlive and player.Character:FindFirstChild("HumanoidRootPart") then
                local Corners = GetCorners(player)
                local Positions = Corners.Positions
                local xDist = Corners.BottomRight.X - Corners.TopLeft.X
                local yDist = Corners.BottomRight.Y - Corners.TopLeft.Y
                local RootPosition, OnScreen =
                    Services.Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
                if Config.Visuals.BoxEsp then
                    Box.Visible = OnScreen
                    Box.Size = Vector2.new(xDist, yDist)
                    Box.Position = Corners.TopLeft
                else
                    Box.Visible = false
                end
                if Config.Visuals.TracerEsp then
                    Tracer.Visible = OnScreen
                    if Config.Visuals.TracersOrigin == "Top" then
                        Tracer.To = Vector2.new(Services.Camera.ViewportSize.X / 2, 0)
                        Tracer.From = Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.TopLeft.Y)
                    elseif Config.Visuals.TracersOrigin == "Middle" then
                        Tracer.To = Vector2.new(Services.Camera.ViewportSize.X / 2, Services.Camera.ViewportSize.Y / 2)
                        Tracer.From =
                            Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.BottomRight.Y - (yDist / 2))
                    elseif Config.Visuals.TracersOrigin == "Bottom" then
                        Tracer.To = Vector2.new(Services.Camera.ViewportSize.X / 2, 1000)
                        Tracer.From = Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.BottomRight.Y)
                    elseif Config.Visuals.TracersOrigin == "Mouse" then
                        Tracer.To = game:GetService("UserInputService"):GetMouseLocation()
                        Tracer.From =
                            Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.BottomRight.Y - (yDist / 2))
                    end
                else
                    Tracer.Visible = false
                end
                if Config.Visuals.NameEsp then
                    Name.Visible = OnScreen
                    Name.Position = Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.TopLeft.Y - 45)
                    Name.Text = "[ " .. player.Name .. " ]"
                else
                    Name.Visible = false
                end
                if Config.Visuals.DistanceEsp and player.Character:FindFirstChild("Head") then
                    Distance.Visible = OnScreen
                    Distance.Position = Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.TopLeft.Y - 25)
                    Distance.Text =
                        "[ " ..
                        Funcs:Round(
                            (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                player.Character.Head.Position).Magnitude
                        ) ..
                            " Studs ]"
                else
                    Distance.Visible = false
                end
                if Config.Aimbot.SnapLines and player == Funcs:GetTarget() then
                    SnapLines.Visible = OnScreen
                    SnapLines.Color = Color3.fromRGB(255, 255, 255)
                    SnapLines.To = game:GetService("UserInputService"):GetMouseLocation()
                    SnapLines.From =
                        Vector2.new(Corners.BottomRight.X - (xDist / 2), Corners.BottomRight.Y - (yDist / 2))
                else
                    SnapLines.Visible = false
                end
                if Config.Visuals.SkeletonEsp then
                    HeadLowerTorso.Visible = OnScreen
                    HeadLowerTorso.From = Vector2.new(Positions.Head.X, Positions.Head.Y)
                    HeadLowerTorso.To = Vector2.new(Positions.LowerTorso.X, Positions.LowerTorso.Y)
                    NeckLeftUpper.Visible = OnScreen
                    NeckLeftUpper.From =
                        Vector2.new(
                        Positions.Head.X,
                        Positions.Head.Y + ((Positions.UpperTorso.Y - Positions.Head.Y) / 3)
                    )
                    NeckLeftUpper.To = Vector2.new(Positions.LeftUpperArm.X, Positions.LeftUpperArm.Y)
                    LeftUpperLeftLower.Visible = OnScreen
                    LeftUpperLeftLower.From = Vector2.new(Positions.LeftLowerArm.X, Positions.LeftLowerArm.Y)
                    LeftUpperLeftLower.To = Vector2.new(Positions.LeftUpperArm.X, Positions.LeftUpperArm.Y)
                    NeckRightUpper.Visible = OnScreen
                    NeckRightUpper.From =
                        Vector2.new(
                        Positions.Head.X,
                        Positions.Head.Y + (Positions.UpperTorso.Y - Positions.Head.Y) / 3
                    )
                    NeckRightUpper.To = Vector2.new(Positions.RightUpperArm.X, Positions.RightUpperArm.Y)
                    RightUpperLeftLower.Visible = OnScreen
                    RightUpperLeftLower.From = Vector2.new(Positions.RightLowerArm.X, Positions.RightLowerArm.Y)
                    RightUpperLeftLower.To = Vector2.new(Positions.RightUpperArm.X, Positions.RightUpperArm.Y)
                    LowerTorsoLeftUpper.Visible = OnScreen
                    LowerTorsoLeftUpper.From = Vector2.new(Positions.LowerTorso.X, Positions.LowerTorso.Y)
                    LowerTorsoLeftUpper.To = Vector2.new(Positions.LeftUpperLeg.X, Positions.LeftUpperLeg.Y)
                    LeftLowerLeftUpper.Visible = OnScreen
                    LeftLowerLeftUpper.From = Vector2.new(Positions.LeftLowerLeg.X, Positions.LeftLowerLeg.Y)
                    LeftLowerLeftUpper.To = Vector2.new(Positions.LeftUpperLeg.X, Positions.LeftUpperLeg.Y)
                    LowerTorsoRightUpper.Visible = OnScreen
                    LowerTorsoRightUpper.From = Vector2.new(Positions.RightLowerLeg.X, Positions.RightLowerLeg.Y)
                    LowerTorsoRightUpper.To = Vector2.new(Positions.RightUpperLeg.X, Positions.RightUpperLeg.Y)
                    RightLowerRightUpper.Visible = OnScreen
                    RightLowerRightUpper.From = Vector2.new(Positions.LowerTorso.X, Positions.LowerTorso.Y)
                    RightLowerRightUpper.To = Vector2.new(Positions.RightUpperLeg.X, Positions.RightUpperLeg.Y)
                else
                    HeadLowerTorso.Visible = false
                    NeckLeftUpper.Visible = false
                    LeftUpperLeftLower.Visible = false
                    NeckRightUpper.Visible = false
                    RightUpperLeftLower.Visible = false
                    LowerTorsoLeftUpper.Visible = false
                    LeftLowerLeftUpper.Visible = false
                    LowerTorsoRightUpper.Visible = false
                    RightLowerRightUpper.Visible = false
                end
            else
                Box.Visible = false
                Tracer.Visible = false
                Name.Visible = false
                Distance.Visible = false
                HeadLowerTorso.Visible = false
                NeckLeftUpper.Visible = false
                LeftUpperLeftLower.Visible = false
                NeckRightUpper.Visible = false
                RightUpperLeftLower.Visible = false
                LowerTorsoLeftUpper.Visible = false
                LeftLowerLeftUpper.Visible = false
                LowerTorsoRightUpper.Visible = false
                RightLowerRightUpper.Visible = false
            end
        end
    )
end

for i, v in pairs(Services.Players:GetPlayers()) do
    if v ~= Services.LocalPlayer then
        Funcs:AddEsp(v)
        local plrfolder = Instance.new("Folder", things)
        plrfolder.Name = v.Name
        plrfolder.Parent = things
    end
end

Services.Players.PlayerAdded:Connect(
    function(player)
        if v ~= Services.LocalPlayer then
            Funcs:AddEsp(player)
            local plrfolder = Instance.new("Folder", things)
            plrfolder.Name = player.Name
            plrfolder.Parent = things
        end
    end
)

game:GetService("Players").LocalPlayer.PlayerGui.Blnd.Blind.Changed:connect(
    function()
        if Config.Visuals.Flash == true then
            game:GetService("Players").LocalPlayer.PlayerGui.Blnd.Enabled = false
        end
    end
)

local FOVCircle = Drawing.new("Circle")
FOVCircle.Color = Color3.fromRGB(190, 190, 0)
FOVCircle.Thickness = 0.5
FOVCircle.NumSides = 16
FOVCircle.Filled = false
FOVCircle.Transparency = 1

local oldgunmodules = {}
for i, v in pairs(game.ReplicatedStorage.Weapons:GetChildren()) do
    oldgunmodules[v] = {}
    if v:FindFirstChild("Ammo") and v:FindFirstChild("Recoil") and v:FindFirstChild("Spread") then
        oldgunmodules[v]["Spread"] = v.Spread.Value
        for i, d in pairs(v.Spread:GetChildren()) do
            if d.Name == "RecoveryTime" then
                oldgunmodules[v]["RecoveryTime"] = d.Value
                oldgunmodules[v]["Crouched"] = d.Crouched.Value
            else
                oldgunmodules[v][d.Name] = d.Value
            end
        end
        oldgunmodules[v]["FireRate"] = v.FireRate.Value
        oldgunmodules[v]["Auto"] = v.Auto.Value
        oldgunmodules[v]["Penetration"] = v.Penetration.Value
        oldgunmodules[v]["Bullets"] = v.Bullets.Value
    end
end

Services.RunService.Stepped:Connect(
    function()
        FOVCircle.Position = game:GetService("UserInputService"):GetMouseLocation()
        FOVCircle.Radius = Config.Aimbot.FOV
        if Config.Aimbot.DrawFOV then
            FOVCircle.Visible = true
        else
            FOVCircle.Visible = false
        end
        if Config.GunMods.Recoil then
            Client.RecoilX = 0
            Client.RecoilY = 0
        end
        if Config.GunMods.Spread then
            Client.resetaccuracy()
        end
        if Config.GunMods.InfAmmo then
            Client.ammocount = math.huge
            Client.ammocount2 = math.huge
            Client.ammocount3 = math.huge
            Client.ammocount4 = math.huge
        end
        for i, v in pairs(game.ReplicatedStorage.Weapons:GetChildren()) do
            if v:FindFirstChild("Ammo") and v:FindFirstChild("Recoil") and v:FindFirstChild("Spread") then
                for i, d in pairs(v.Spread:GetChildren()) do
                    if Config.GunMods.Spread then
                        v.Spread.Value = 0
                        if d.Name == "RecoveryTime" then
                            d.Value = 0
                            d.Crouched.Value = 0
                        else
                            d.Value = 0
                        end
                    elseif not Config.GunMods.Spread and v.Spread.Value ~= oldgunmodules[v]["Spread"] then
                        v.Spread.Value = oldgunmodules[v]["Spread"]
                        if d.Name == "RecoveryTime" then
                            d.Value = oldgunmodules[v]["RecoveryTime"]
                            d.Crouched.Value = oldgunmodules[v]["Crouched"]
                        else
                            d.Value = oldgunmodules[v][d.Name]
                        end
                    end
                end
                if Config.GunMods.InstaKill then
                    v.Bullets.Value = 10
                elseif not Config.GunMods.InstaKill and v.Bullets.Value ~= oldgunmodules[v]["Bullets"] then
                    v.Bullets.Value = oldgunmodules[v]["Bullets"]
                end
            end
        end
    end
)
